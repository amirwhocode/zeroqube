hub:
  db:
    type: sqlite-memory
  authenticator:
    # Replace DummyAuthenticator with a more secure authentication method
    # For simplicity, we're using Native Authenticator which allows user creation
    # For production, consider using OAuth, LDAP, or other secure authentication methods
    class: nativeauthenticator.NativeAuthenticator
    admin_users:
      - admin  # This user will be created as an admin
  extraConfig:
    # Enable authentication
    auth: |
      # Allow admins to create users via API
      c.Authenticator.manage_groups = True
      c.Authenticator.allow_all = False
      c.Authenticator.whitelist = set()
      c.Authenticator.admin_users = {'admin'}

    # Enable ngshare
    ngshare: |
      # Enable ngshare service
      c.JupyterHub.services.append({
          'name': 'ngshare',
          'url': 'http://ngshare:8080',
          'api_token': 'YOUR_API_TOKEN_HERE',  # Replace with a secure token
      })
      
      # Enable nbgrader and ngshare extensions
      c.Spawner.default_url = '/lab'  # Use JupyterLab as default interface
      c.Spawner.cmd = ['jupyter-labhub']
      c.Spawner.args = ['--NotebookApp.nbserver_extensions.ngshare_exchange=True']

# Add the ngshare deployment information
singleuser:
  image:
    name: custom-jupyter-ngshare
    tag: latest
    pullPolicy: IfNotPresent
  extraEnv:
    JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
    JUPYTER_ENABLE_LAB: "yes"
    EXCHANGE_SUBMIT_LOCK_PATH: "/srv/ngshare/submit.lock"
  defaultUrl: "/lab"
  extraFiles:
    jupyter_config.json:
      mountPath: /etc/jupyter/jupyter_config.json
      data:
        NotebookApp:
          nbserver_extensions:
            ngshare_exchange: true
        ServerApp:
          jpserver_extensions:
            ngshare_exchange: true
  storage:
    capacity: 1Gi
  lifecycleHooks:
    postStart:
      exec:
        command: [ "sh", "-c", "mkdir -p /home/jovyan/.jupyter/nbgrader_config.py" ]

# Create persistent volume claim for ngshare data
prePuller:
  hook:
    enabled: false